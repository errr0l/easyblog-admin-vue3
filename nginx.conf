
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    # 请求数限制
    limit_req_zone $binary_remote_addr zone=rateLimit:10m rate=10r/s;
    # 并发量限流（单个ip控制）
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    # 并发量限流（整个服务控制）
    limit_conn_zone $server_name zone=perserver:10m;

    #gzip  on;
    client_max_body_size 10m;
    #proxy_connect_timeout 300;

    map $arg_project $proxy_host {
        default      127.0.0.1:8080;
        easyblog     127.0.0.1:8080;
    }

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        limit_conn perip 10;
        limit_conn perserver 100;

        location / {
            root   html;
            index  index.html index.htm;
        }
        # 接口
        location /0 {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'POST,GET,PUT,OPTIONS,DELETE';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Access-Control-Allow-Credentials' false;
            add_header 'Access-Control-Max-Age' 1728000;

            if ($request_method = OPTIONS) {
                return 204;
            }

            # 博客【去除项目标识（？）】
            if ($request_uri ~ ^/0/easyblog/admin) {
                rewrite ^/0/easyblog/admin(.*) $1 break;
                proxy_pass http://127.0.0.1:8080;
            }

            # easyshop-admin
            if ($request_uri ~ ^/0/easyshop/admin) {
                rewrite ^/0/easyshop/admin(.*) $1 break;
                proxy_pass http://127.0.0.1:8081;
            }

            # easyshop-portal
            if ($request_uri ~ ^/0/easyshop/portal) {
                rewrite ^/0/easyshop/portal(.*) $1 break;
                proxy_pass http://127.0.0.1:8082;
            }
        }

        # root和alias的区别：root模式下，会将匹配的路径拼接在root指令指定的路径后面，如果找不到文件就是404；
        # 而alias则是将匹配命中的路径移除，并将后面的路径拼接到alias指令指定的路径；
        # easyshop前端
        # 以下是可以正常工作的，但现在要将管理系统修改为只能内部访问，因此拆分成了俩
        # location /easyshop {
        #     root /home/errol/application/webapp;
        #     index index.html;
        # }
        # 博客后台
        #【rewrite+root一起使用时，有点问题，所以现在只能分开写了】
        location /easyblog/admin {
            alias /home/errol/application/web/easyblog-admin;
            index index.html;
        }
        # 博客
        location /easyblog {
            alias /home/errol/application/web/github-pages;
            index index.html;
        }
        #location /easyshop/admin {
        #    root /home/errol/application/webapp;
        #    index index.html;
        #}
        #location /easyshop/portal {
        #    root /home/errol/application/webapp;
        #    index index.html;
        #}
        location /ya {
            rewrite ^/ya(.*) $1 break;
            proxy_pass http://127.0.0.1:8111;
        }

        #location ~/group([0-9])/M00 {
        #    root /home/errol/data/dev/fastdfs/storage_data;
        #    ngx_fastdfs_module;
        #}

        #location /cloud {
        #    rewrite ^/cloud(.*) $1 break;
        #    proxy_pass http://localhost:8888;
        #}
        
        # 图片
        location ~ ^/(image|temp) {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET,OPTIONS';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Access-Control-Allow-Credentials' false;
            add_header 'Access-Control-Max-Age' 1728000;
            limit_req zone=rateLimit burst=10 nodelay;
            proxy_pass http://$proxy_host;
        }

        location ~* \.json$ {
            root /home/errol/application/config;
            default_type application/json;
        }

        # error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        error_page  500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # HTTPS server
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}